module Xml_to_csv = 

let number = [0-9]+ . ("." . [0-9]+){0,1}
let text = ([a-zA-Z0-9/()&*,'. ] | "-")*
let u_o_d = [A-Z0-9]

let f1 = "<year>" . number. "</year>"
let f2 = "<crime_index_ranking>". number. "</crime_index_ranking>"
let f3 = "<city>". text. "</city>"
let f4 = "<rate>". number. "</rate>"

let row = f1 . f2 . f3 . f4

let r1 = "_id=" . "\"" . number . "\""
let r2 = "_uuid=" . "\"" . u_o_d{8} . "-" . u_o_d{4} . "-" . u_o_d{4} . "-" . u_o_d{4}
		. "-" . u_o_d{12} . "\""
let r3 = "_position=" . "\"" . number . "\""
let r4 = "_address=" . "\"http://data.cityofnewyork.us/resource/_3h6b-pt5u/" . number . "\""

let header = r1 . " " . r2 . " " . r3 . " " . r4

let csv = number . "," . number . "," . text . "," . number

let innerlens = synth row <=> csv

let fullens = (del ("<row " . header . ">")) . innerlens  . (del "</row>") . (ins "\n")

let preamble = "Year,Crime Index Ranking ,City,Rate"

let finallens = (ins (preamble . "\n")) . 
(del "<response><row>") . fullens*. (del "</row></response>")
