module Bibtex_endnote = 

let title_case : regexp = [A-Z] . [a-zA-Z]*

let full_name : regexp = title_case

let initial : regexp = [A-Z] . "."

let name : regexp = full_name | initial

let wsp  = project [ \n\t\r]+ -> " "

let valid_name  = name | (name . wsp . (name . wsp)* . name)

let wsp_surrounded_and = wsp . "and" . wsp

let bib_names = 
    valid_name
    | (valid_name
       . wsp_surrounded_and
       . (valid_name . wsp_surrounded_and)*
       . valid_name)

let bib_author  = "author = \"" . bib_names . "\""

let label = [a-zA-Z0-9]+

let word = ([A-Z] | [0-9]) . [a-zA-Z0-9]* 

let title = word | (word . wsp . (word . wsp)* . word)

test canonize bib_names "Conway\n\nJ. \r\rH. \n and\t\r Conway H. J." = "Conway J. H. and Conway H. J."

let end_name = "%A" . wsp . valid_name

let wsp_default_nl = project [ \n\t\r]+ -> "\n"

let end_author = 
    end_name | (end_name . wsp_default_nl . (end_name . wsp_default_nl)* . end_name)

let author_map = synth bib_author <=> end_author

test canonize end_author "%A Conway\n\nJ. \r\rH. \n\n\t\r %A Conway H. J." = "%A Conway J. H.\n%A Conway H. J."

let bib_title  = "title = {" . title . "}"

let end_title  = "%T " . title

let ws_default_nl = project [ \n\t\r]* -> "\n"
let bib_field_sep : canonizer =  "," . ws_default_nl

let bib_perm : canonizer = perm ([a-z]+, bib_author, bib_title) with bib_field_sep

let end_perm : canonizer = 
perm ("%0 Book", ("%F " . [a-z]+), end_author, end_title) with ws_default_nl

let bibtex : canonizer = "@book{" . bib_perm . bib_field_sep . "}"

let endnote : canonizer = end_perm 

let bib_record1 = 
"@book{conway, title = {Regular Algebra 
And Finite Machines},

author = \"Conway J. H. and 
Conway H. J.\", }"

let bib_record2 = 
"@book{title = {Regular 
Algebra And 
Finite Machines},

conway,

author = \"Conway J. H. and Conway H. J.\", }"

let end_template = 
"%0 Book
%F conway
%A Conway J. H.
%A Conway H. J.
%T Regular Algebra And Finite Machines"

let bib_template = 
"@book{conway,
author = \"Conway J. H. and Conway H. J.\",
title = {Regular Algebra And Finite Machines},}"

let bib_to_end = synth bibtex <=> endnote using {(bib_template, end_template)}

test get bib_to_end bib_record1 = get bib_to_end bib_record1
